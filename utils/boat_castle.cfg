#define BOAT_CASTLE_START unit_id var_id
	[fire_event]
		name=boat_moves
		[primary_unit]
			id={unit_id}
		[/primary_unit]
	[/fire_event]

	[store_unit]
		variable=boat_unit
		[filter]
			id={unit_id}
		[/filter]
	[/store_unit]

	# Any human controlled unit next to a ship can be moved back into the recall list and marked as on board that ship
	[set_menu_item]
		id="unrecall_unit_{var_id}"
		description=_ "Board $boat_unit[0].name|"

		[show_if]
			[have_unit]
				x,y=$x1,$y1
				[filter_side]
					controller=human
				[/filter_side]
				[filter_adjacent]
					id={unit_id}
				[/filter_adjacent]
				formula="moves > 0"
			[/have_unit]
		[/show_if]

		[modify_unit]
			x,y=$x1,$y1
			[variables]
				ship={unit_id}
			[/variables]
		[/modify_unit]

		[command]
			[put_to_recall_list]
				x,y=$x1,$y1
			[/put_to_recall_list]
		[/command]
	[/set_menu_item]
#enddef

#define BOAT_CASTLE unit_id var_id
	[event]
		name=boat_moves
		first_time_only=no

		# Restore previous location of the boat, if any.
		[if]
			[variable]
				name={var_id}.length
				greater_than=0
			[/variable]
			[then]
				[foreach]
					array={var_id}
					[do]
						[if]
							[variable]
								name=this_item.x
								numerical_not_equals=-1
							[/variable]

							[and]
								[have_location]
									terrain=*^K*
									x,y=$this_item.x,$this_item.y
								[/have_location]
							[/and]

							[then]
								[terrain]
									layer=overlay
									terrain=$this_item.terrain
									x,y=$this_item.x,$this_item.y
								[/terrain]
							[/then]
						[/if]
					[/do]
				[/foreach]
			[/then]
		[/if]

		[store_locations]
			radius=2
			x,y=$unit.x,$unit.y
			variable={var_id}
		[/store_locations]

		# Everywhere that doesn't have an overlay and can be a keep, turn into a keep
		[foreach]
			array={var_id}
			[do]
				[if]
					[lua]
						code = <<
							return not not wml.variables["this_item.terrain"]:match("%^")
						>>
					[/lua]

					[or]
						[have_location]
							terrain=Wo*
							x,y=$this_item.x,$this_item.y
						[/have_location]
					[/or]

					# We always need to turn the hex the ship itself is on into a keep.
					[and]
						[not]
							[and]
								[variable]
									name=unit.x
									numerical_equals="$this_item.x"
								[/variable]
								[variable]
									name=unit.y
									numerical_equals="$this_item.y"
								[/variable]
							[/and]
						[/not]
					[/and]

					[then]
						[set_variable]
							name=this_item.x
							value=-1
						[/set_variable]
					[/then]

					[else]
						[terrain]
							layer=overlay
							terrain="^Kov"
							x,y=$this_item.x,$this_item.y
						[/terrain]
					[/else]
				[/if]
			[/do]
		[/foreach]

		# The ship itself should have a keep.
		[terrain]
			layer=overlay
			terrain="^Kov"
			x,y=$unit.x,$unit.y
		[/terrain]
	[/event]

	[event]
		name=scenario end

		[clear_variable]
			name={var_id}
		[/clear_variable]

		[clear_variable]
			name=boat_unit
		[/clear_variable]
	[/event]

	[event]
		name=prestart

		[if]
			[have_unit]
				id={unit_id}
			[/have_unit]

			[then]
				{BOAT_CASTLE_START {unit_id} {var_id}}
			[/then]
		[/if]
	[/event]

	[event]
		name=moveto
		first_time_only=no
		[filter]
			id={unit_id}
		[/filter]

		[fire_event]
			name=boat_moves
			[primary_unit]
				id=$unit.id
			[/primary_unit]
		[/fire_event]
	[/event]
#enddef
